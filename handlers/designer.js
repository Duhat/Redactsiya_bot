const { Markup } = require("telegraf");

function designerHandler(bot, db) {
    const userStates = {};
    console.log("üõ†Ô∏è Designer handler –∑–∞–≥—Ä—É–∂–µ–Ω");

    // –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ /design
    bot.command('design', async (ctx) => {
        try {
            const userId = ctx.from.id;
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
            if (userStates[userId]) {
                const currentArticle = db.get('articles')
                    .find({ id: userStates[userId].articleId })
                    .value();
                    
                return ctx.replyWithMarkdown(
                    `üö´ *–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è!*\n\n` +
                    `üìå –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç—å—è: "${currentArticle.title}"\n` +
                    `üîó –°—Å—ã–ª–∫–∞: ${currentArticle.link}\n\n` +
                    `–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –¥–∏–∑–∞–π–Ω –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π /cancel`
                );
            }

            const articles = db.get('articles')
                .filter({ status: 'approved' })
                .value();

            if (!articles.length) {
                return ctx.replyWithMarkdown(
                    'üì≠ *–ù–µ—Ç —Å—Ç–∞—Ç–µ–π –¥–ª—è –¥–∏–∑–∞–π–Ω–∞!*\n' +
                    '–í—Å–µ —Å—Ç–∞—Ç—å–∏ —É–∂–µ –≤ —Ä–∞–±–æ—Ç–µ –∏–ª–∏ –æ–∂–∏–¥–∞—é—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏.'
                );
            }

            // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç–∞—Ç—å–∏
            const articleCounts = db.get('designs')
                .filter({ status: 'pending' })
                .groupBy('articleId')
                .map((designs, articleId) => ({ articleId, count: designs.length }))
                .keyBy('articleId')
                .value();

            const buttons = articles.map(article => {
                const count = articleCounts[article.id]?.count || 0;
                return [
                    Markup.button.callback(
                        `üìå ${article.title.slice(0, 40)} ( –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤: ${count} )`,
                        `select_article_${article.id}`
                    )
                ];
            });

            await ctx.replyWithMarkdown(
                'üìö *–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞—Ç—å–∏:*\n' +
                '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—å—é –¥–ª—è –¥–∏–∑–∞–π–Ω–∞:',
                Markup.inlineKeyboard(buttons)
            );

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤ /design:', error);
            ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–µ–π');
        }
    });

    // –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω—ã
    bot.command('cancel', async (ctx) => {
        const userId = ctx.from.id;
        if (userStates[userId]) {
            delete userStates[userId];
            return ctx.reply('‚úÖ –¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
        }
        return ctx.reply('‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã');
    });

    // –í—ã–±–æ—Ä —Å—Ç–∞—Ç—å–∏
    bot.action(/select_article_(\d+)/, async (ctx) => {
        try {
            const userId = ctx.from.id;
            
            if (userStates[userId]) {
                return ctx.answerCbQuery('üö´ –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é!', { show_alert: true });
            }

            const articleId = parseInt(ctx.match[1]);
            const article = db.get("articles")
                .find({ id: articleId, status: "approved" })
                .value();

            if (!article) {
                await ctx.answerCbQuery("‚ùå –°—Ç–∞—Ç—å—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!", { show_alert: true });
                return;
            }

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä
            userStates[userId] = {
                articleId: articleId,
                step: "confirm_article",
                timestamp: Date.now()
            };

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            await ctx.replyWithMarkdown(
                `üìö *–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏:*\n\n` +
                `üìå *–ó–∞–≥–æ–ª–æ–≤–æ–∫:* ${article.title}\n` +
                `üìÑ *–û–ø–∏—Å–∞–Ω–∏–µ:*\n${article.description}\n\n` +
                `üîó *–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è*`,
                Markup.inlineKeyboard([
                    [
                        Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', `confirm_article_${articleId}`),
                        Markup.button.callback('‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', 'reject_article')
                    ]
                ])
            );
            
            await ctx.answerCbQuery();
            
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç–∞—Ç—å–∏:", error);
            ctx.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞! –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –≤—ã–±–æ—Ä");
        }
    });

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
    bot.action(/confirm_article_(\d+)/, async (ctx) => {
        try {
            const userId = ctx.from.id;
            const articleId = parseInt(ctx.match[1]);
            
            const session = userStates[userId];
            if (!session || session.articleId !== articleId) {
                return ctx.answerCbQuery('üö´ –°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞!', { show_alert: true });
            }

            const article = db.get("articles")
                .find({ id: articleId })
                .value();

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            session.step = "waiting_design_url";
            session.attempts = 3;

            await ctx.editMessageText(
                `üìå *–°—Ç–∞—Ç—å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞:* ${article.title}\n\n` +
                `üîó *–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é:* ${article.link}\n\n` +
                `üåê –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –¥–∏–∑–∞–π–Ω:`,
                { parse_mode: "Markdown" }
            );

            await ctx.answerCbQuery();
            
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:", error);
            ctx.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞! –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä");
        }
    });

    // –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
    bot.action('reject_article', async (ctx) => {
        try {
            const userId = ctx.from.id;
            
            if (userStates[userId]) {
                delete userStates[userId];
                await ctx.editMessageText('‚ùå –í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—å—é');
                await ctx.answerCbQuery();
                return ctx.replyWithMarkdown(
                    'üîÑ –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å—Ç–∞—Ç—å—é –∫–æ–º–∞–Ω–¥–æ–π /design'
                );
            }
            
            await ctx.answerCbQuery('üö´ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏!', { show_alert: true });
            
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:", error);
            ctx.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞! –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ");
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Å—ã–ª–æ–∫
    bot.on('text', async (ctx) => {
        try {
            const userId = ctx.from.id;
            const session = userStates[userId];
            
            if (!session || session.step !== "waiting_design_url") return;

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Å—Å—ã–ª–∫–∏
            if (!/^(https?:\/\/)[\w.-]+\.[a-z]{2,}(\/\S*)?$/i.test(ctx.message.text)) {
                session.attempts--;
                
                if (session.attempts > 0) {
                    return ctx.replyWithMarkdown(
                        `‚ùå *–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞!*\n` +
                        `–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: ${session.attempts}\n\n` +
                        "–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:\n" +
                        "`https://drive.google.com/file/design.pdf`"
                    );
                }
                
                delete userStates[userId];
                return ctx.reply("üö´ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ /design");
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –¥–∏–∑–∞–π–Ω–∞
            const existingDesign = db.get("designs")
                .find({ 
                    articleId: session.articleId,
                    designerId: userId,
                    status: "pending"
                })
                .value();
                
            if (existingDesign) {
                return ctx.replyWithMarkdown(
                    `‚ö†Ô∏è *–£–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω!*\n\n` +
                    `üîó –¢–µ–∫—É—â–∞—è —Å—Å—ã–ª–∫–∞: ${existingDesign.designUrl}\n\n` +
                    `–î–æ–∂–¥–∏—Ç–µ—Å—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é /cancel`
                );
            }

            // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∏–∑–∞–π–Ω–∞
            db.get("designs").push({
                id: Date.now(),
                articleId: session.articleId,
                designerId: userId,
                designUrl: ctx.message.text,
                status: "pending",
                createdAt: new Date().toISOString()
            }).write();

            // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
            const article = db.get("articles").find({ id: session.articleId }).value();
            const MODERATOR_ID = process.env.MODERATOR_ID;
            
            await bot.telegram.sendMessage(
                MODERATOR_ID,
                `üé® *–ù–æ–≤—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è —Å—Ç–∞—Ç—å–∏:*\n\n` +
                `üìå ${article.title}\n` +
                `üë§ –î–∏–∑–∞–π–Ω–µ—Ä: @${ctx.from.username || '–±–µ–∑ username'}\n` +
                `üîó –°—Å—ã–ª–∫–∞: ${ctx.message.text}`,
                { parse_mode: "Markdown" }
            );

            delete userStates[userId];
            
            // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await ctx.replyWithMarkdown(
                "‚úÖ *–î–∏–∑–∞–π–Ω —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!*\n\n" +
                "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤–∞—à—É —Ä–∞–±–æ—Ç—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è\n\n" +
                "–î–ª—è –Ω–æ–≤–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /design"
            );

        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∏–∑–∞–π–Ω–∞:", error);
            ctx.reply("‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! –°–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
        }
    });
}

module.exports = { designerHandler };
 